version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: manajemen-risiko-db
    environment:
      POSTGRES_DB: manajemen_risiko
      POSTGRES_USER: majapahit
      POSTGRES_PASSWORD: Madiun@123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - manajemen-risiko-network

  # Spring Boot Application
  app:
    build: .
    container_name: manajemen-risiko-app
    environment:
      DB_URL: jdbc:postgresql://postgres:5432/manajemen_risiko
      DB_USERNAME: majapahit
      DB_PASSWORD: Madiun@123
      SPRING_PROFILES_ACTIVE: dev
      SPRING_FLYWAY_ENABLED: true
      SPRING_FLYWAY_BASELINE_ON_MIGRATE: true
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - manajemen-risiko-network
    restart: unless-stopped
    command: >
      sh -c "
        echo 'Waiting for PostgreSQL to be ready...'
        while ! nc -z postgres 5432; do
          echo 'PostgreSQL is not ready yet, waiting...'
          sleep 2
        done
        echo 'PostgreSQL is ready!'
        exec java -jar app.jar
      "

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: manajemen-risiko-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - manajemen-risiko-network
    restart: unless-stopped

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: manajemen-risiko-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - manajemen-risiko-network
    depends_on:
      - prometheus
    restart: unless-stopped

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  manajemen-risiko-network:
    driver: bridge
